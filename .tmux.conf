# set prefix as C-Space
unbind C-b
set-option -g prefix C-Space
bind-key C-Space send-prefix

bind-key v split-window -h -c "#{pane_current_path}"
bind s split-window -v -c "#{pane_current_path}"
unbind '"'
unbind %

# reload config file (change file location to your the tmux.conf you want to use)
bind r source-file ~/.tmux.conf

# vim navigation
is_vim="ps -o state= -o comm= -t '#{pane_tty}' | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"

bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h' { if -F '#{pane_at_left}' '' 'select-pane -L' }
bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j' { if -F '#{pane_at_bottom}' '' 'select-pane -D' }
bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k' { if -F '#{pane_at_top}' '' 'select-pane -U' }
bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l' { if -F '#{pane_at_right}' '' 'select-pane -R' }

bind-key -T copy-mode-vi 'C-h' if -F '#{pane_at_left}' '' 'select-pane -L'
bind-key -T copy-mode-vi 'C-j' if -F '#{pane_at_bottom}' '' 'select-pane -D'
bind-key -T copy-mode-vi 'C-k' if -F '#{pane_at_top}' '' 'select-pane -U'
bind-key -T copy-mode-vi 'C-l' if -F '#{pane_at_right}' '' 'select-pane -R'

is_vim="ps -o state= -o comm= -t '#{pane_tty}' | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"

bind -n 'M-h' if-shell "$is_vim" 'send-keys M-h' 'resize-pane -L 1'
bind -n 'M-j' if-shell "$is_vim" 'send-keys M-j' 'resize-pane -D 1'
bind -n 'M-k' if-shell "$is_vim" 'send-keys M-k' 'resize-pane -U 1'
bind -n 'M-l' if-shell "$is_vim" 'send-keys M-l' 'resize-pane -R 1'

bind-key -T copy-mode-vi M-h resize-pane -L 1
bind-key -T copy-mode-vi M-j resize-pane -D 1
bind-key -T copy-mode-vi M-k resize-pane -U 1
bind-key -T copy-mode-vi M-l resize-pane -R 1

# swap panes
bind h select-pane -L \; swap-pane -s '!' \; last-pane
bind j select-pane -D \; swap-pane -s '!' \; last-pane
bind k select-pane -U \; swap-pane -s '!' \; last-pane
bind l select-pane -R \; swap-pane -s '!' \; last-pane

# double space to maximize pane
bind C-Space resize-pane -Z
bind -n C-Right next-window
bind -n C-Left previous-window

bind X killw
bind x killp
bind-key C-o rotate-window

bind-key + select-layout main-horizontal
bind-key = select-layout main-vertical

set-window-option -g other-pane-height 25
set-window-option -g other-pane-width 80
set-window-option -g display-panes-time 1500
set-window-option -g window-status-current-style fg=magenta

bind-key a last-pane
bind-key q display-panes
bind-key c new-window
bind-key t next-window
bind-key T previous-window

bind-key [ copy-mode
bind-key ] paste-buffer

# Setup 'v' to begin selection as in Vim
bind-key -T copy-mode-vi v send -X begin-selection
bind-key -T copy-mode-vi y send -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy"

# Update default binding of `Enter` to also use copy-pipe
unbind -T copy-mode-vi Enter
bind-key -T copy-mode-vi Enter send -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy"

set-option -g pane-active-border-style fg=yellow
set-option -g pane-border-style fg=cyan

# Set window notifications
setw -g monitor-activity on
set -g visual-activity on

# Enable native Mac OS X copy/paste
set-option -g default-command "/bin/bash -c 'which reattach-to-user-namespace >/dev/null && exec reattach-to-user-namespace $SHELL -l || exec $SHELL -l'"

# Allow the arrow key to be used immediately after changing windows
set-option -g repeat-time 0

# copied config below
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'christoomey/vim-tmux-navigator'
set -g @plugin 'MunifTanjim/tmux-mode-indicator'
set -g @plugin 'tmux-plugins/tmux-cpu'
set -g @emulate-scroll-for-no-mouse-alternate-buffer "on"

 set -g default-terminal "xterm-256color"
# set -as terminal-overrides ',*:Tc:smulx=\E[4\:%p1%dm'
set -g default-terminal "${TERM}"
set -as terminal-overrides ',*:Smulx=\E[4::%p1%dm'  # undercurl support
set -as terminal-overrides ',*:Setulc=\E[58::2::%p1%{65536}%/%d::%p1%{256}%/%{255}%&%d::%p1%{255}%&%d%;m'  # underscore colours - needs tmux-3.0

# the colors below are environment vars that can be found in ~/.tmux_colors.sh
set -g status on
set -g status-style fg=$light_text,bg=default
set -g pane-border-style bg=default,fg=black
set -g pane-active-border-style bg=default,fg=color8
set -g mode-keys vi
set -g status-keys vi
set -g mouse on
set -g escape-time 0
set -g focus-events on
set -g history-limit 3000
set -g history-file ~/.tmux_history
set -g monitor-activity off
set -g visual-activity off
set -g base-index 1
set -g pane-base-index 1
set -g -w automatic-rename off
set -g renumber-windows on
set -g bell-action none
set -g status-position top
set -g status-interval 5
set -s set-clipboard on

set -g @mode_indicator_prefix_prompt " WAIT "
set -g @mode_indicator_prefix_mode_style bg=default,fg=$color_wait
set -g @mode_indicator_copy_prompt " COPY "
set -g @mode_indicator_copy_mode_style bg=default,fg=$color_copy
set -g @mode_indicator_sync_prompt " SYNC "
set -g @mode_indicator_sync_mode_style bg=default,fg=$color_sync
set -g @mode_indicator_empty_prompt " LOCAL "
set -g @mode_indicator_empty_mode_style bg=default,fg=$color_tmux

set -g status-right-length 100
set -g status-left '#{tmux_mode_indicator}'
# Display the connection type in the status bar
if-shell '[ -n "$SSH_CONNECTION" ]' 'set -g @mode_indicator_empty_prompt " SSH "'
if-shell '[ -n "$TMUX_NAME" ]' 'set -g @mode_indicator_empty_prompt " $TMUX_NAME "'

set -g status-right "#[fg=$light_text]CPU: #[fg=$highlight]#{cpu_percentage}  #[fg=$light_text]RAM: #[fg=$highlight]#{ram_percentage}"
set -g status-justify left

set -g window-status-current-format " #[fg=$light_text][#I] #W"
set -g window-status-format " #[fg=#676767][#I] #W"

run '~/.tmux/plugins/tpm/tpm'
